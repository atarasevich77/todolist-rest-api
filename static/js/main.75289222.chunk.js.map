{"version":3,"sources":["api/config.js","components/CreateForm/CreateForm.js","components/TodoItems/TodoItem.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","timeout","headers","CreateForm","props","useState","name","setName","desc","setDesc","className","type","value","onChange","e","target","placeholder","onClick","preventDefault","createTodo","cancelLogo","width","height","viewBox","fill","xmlns","fillRule","d","acceptLogo","TodoItem","nameNode","useRef","descNode","todo","setTodo","description","fieldEditMode","setFieldEditMode","isDoneStyle","textDecoration","done","color","editMode","field","onUpdate","onClose","handleClick","current","contains","useEffect","document","addEventListener","removeEventListener","checked","onStatusChange","ref","el","aria-label","onDoubleClick","style","onDelete","_id","App","todos","setTodos","getAllTodos","api","get","then","response","data","catch","errors","console","log","put","patch","id","delete","Date","toDateString","post","map","index","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.75289222.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:5000',\r\n    timeout: 1000,\r\n    headers: {}\r\n});","import React, {useState} from 'react';\r\n\r\nconst CreateForm = (props) => {\r\n    const [name, setName] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.createTodo({name, desc});\r\n        setName('');\r\n        setDesc('');\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-inline\">\r\n            <div className=\"form-group mb-2\">\r\n                <input type=\"text\" className=\"form-control\"\r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)}\r\n                       placeholder=\"Title\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group mx-sm-3 mb-2\">\r\n                <input type=\"text\" className=\"form-control\"\r\n                       value={desc}\r\n                       onChange={(e) => setDesc(e.target.value)}\r\n                       placeholder=\"Description\"\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-success mb-2\" onClick={onSubmit}>Add</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreateForm;","import React, {useEffect, useRef, useState} from 'react';\r\n\r\nconst cancelLogo = <svg className=\"bi bi-x-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n    <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\r\n    <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\r\n</svg>;\r\n\r\nconst acceptLogo = <svg className=\"bi bi-check-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n    <path fillRule=\"evenodd\" d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\r\n</svg>;\r\n\r\nconst TodoItem = (props) => {\r\n    const nameNode = useRef(null);\r\n    const descNode = useRef(null);\r\n    const [todo, setTodo] = useState(props.todo);\r\n    const [name, setName] = useState(props.todo.name);\r\n    const [desc, setDesc] = useState(props.todo.description);\r\n    const [fieldEditMode, setFieldEditMode] = useState('');\r\n\r\n    const isDoneStyle = {\r\n        textDecoration: todo.done ? 'line-through' : '',\r\n        color: todo.done ? 'green' : ''\r\n    }\r\n\r\n    const editMode = (field) => {\r\n        setFieldEditMode(field);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        todo['done'] = e.target.checked;\r\n        props.onStatusChange(todo);\r\n    }\r\n\r\n    const onUpdate = (e) => {\r\n        e.preventDefault();\r\n        todo['name'] = name;\r\n        todo['description'] = desc;\r\n        props.onUpdate(todo);\r\n        setTodo(todo);\r\n        setFieldEditMode('');\r\n    }\r\n\r\n    const onDelete = () => {\r\n        props.onDelete(todo._id);\r\n    }\r\n\r\n    const onClose = () => {\r\n        setTodo(props.todo);\r\n        setName(props.todo.name);\r\n        setDesc(props.todo.description);\r\n        setFieldEditMode('');\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        if(nameNode.current.contains(e.target) || descNode.current.contains(e.target)){\r\n            return;\r\n        }\r\n        onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClick);\r\n        return () => document.removeEventListener('mousedown', handleClick);\r\n    }, [todo]);\r\n\r\n    return (\r\n        <>\r\n            <td>\r\n                <input type=\"checkbox\" className=\"mt-3\"\r\n                       value={todo.done}\r\n                       onChange={onStatusChange}\r\n                       checked={todo.done}\r\n                />\r\n            </td>\r\n            <td className=\"w-50\" ref={el => nameNode.current = el}>\r\n                {fieldEditMode === 'name' ?\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" className=\"form-control\" aria-label=\"Title\"\r\n                               value={name}\r\n                               onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\" onClick={onClose}>{cancelLogo}</span>\r\n                            <span className=\"input-group-text\" onClick={onUpdate}>{acceptLogo}</span>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <span className=\"input-group-text\"\r\n                          onDoubleClick={() => editMode(\"name\")}\r\n                          style={isDoneStyle}\r\n                    >\r\n                        {name}\r\n                    </span>\r\n                }\r\n            </td>\r\n            <td className=\"w-50\" ref={el => descNode.current = el}>\r\n                {fieldEditMode === 'desc' ?\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" className=\"form-control\" aria-label=\"Description\"\r\n                               value={desc}\r\n                               onChange={(e) => setDesc(e.target.value)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\" onClick={onClose}>{cancelLogo}</span>\r\n                            <span className=\"input-group-text\" onClick={onUpdate}>{acceptLogo}</span>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <span className=\"input-group-text\"\r\n                          onDoubleClick={() => editMode(\"desc\")}\r\n                          style={isDoneStyle}\r\n                    >\r\n                        {desc}\r\n                    </span>\r\n                }\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-secondary ml-auto\" onClick={onDelete}>Delete</button>\r\n            </td>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodoItem;","import React, {useEffect, useState} from 'react';\r\nimport api from './api/config';\r\nimport CreateForm from \"./components/CreateForm/CreateForm\";\r\nimport TodoItem from \"./components/TodoItems/TodoItem\";\r\n\r\nfunction App() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const getAllTodos = () => {\r\n        api.get('/todo')\r\n            .then(response => {\r\n                setTodos(response.data)\r\n            })\r\n            .catch(errors =>\r\n                console.log(errors)\r\n            )\r\n    }\r\n\r\n    const createTodo = (todo) => {\r\n        api.post('/todo', {\r\n                name: todo.name,\r\n                description: todo.desc\r\n            })\r\n            .then(() => {\r\n                getAllTodos();\r\n            })\r\n            .catch(errors =>\r\n                console.log(errors)\r\n            )\r\n    }\r\n\r\n    const onStatusChange = (todo) => {\r\n        api.put(`/todo/${todo._id}`, {\r\n            done: todo.done,\r\n        })\r\n            .then(() => {\r\n                getAllTodos();\r\n            })\r\n            .catch(errors =>\r\n                console.log(errors)\r\n            )\r\n    }\r\n\r\n    const onUpdate = (todo) => {\r\n        api.patch(`/todo/${todo._id}`, {\r\n            name: todo.name,\r\n            description: todo.description,\r\n            done: todo.done\r\n        })\r\n            .then(() => {\r\n                getAllTodos();\r\n            })\r\n            .catch(errors =>\r\n                console.log(errors)\r\n            )\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        api.delete(`/todo/${id}`)\r\n            .then(() => {\r\n                getAllTodos();\r\n            })\r\n            .catch(errors =>\r\n                console.log(errors)\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllTodos();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h1 className=\"text-center p-2\">ToDo list {new Date().toDateString()}</h1>\r\n            <div className=\"row justify-content-center p-2\">\r\n                <CreateForm createTodo={createTodo}/>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <table className=\"table w-75\">\r\n                    <tbody>\r\n                    {\r\n                        todos.map((todo, index) =>\r\n                            <tr key={index}>\r\n                                <TodoItem todo={todo}\r\n                                          onStatusChange={onStatusChange}\r\n                                          onUpdate={onUpdate}\r\n                                          onDelete={onDelete}\r\n                                />\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}